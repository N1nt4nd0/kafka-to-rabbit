spring:
  application:
    name: SyntegricoKafkaToRabbit
  profiles:
    active: ${K2R_ACTIVE_PROFILE}
  datasource:
    url: ${K2R_DB_URL}
    username: ${K2R_DB_USERNAME}
    password: ${K2R_DB_PASSWORD}
  liquibase:
    change-log: classpath:db/changelog/changelog.sql
  jpa:
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: validate
  kafka:
    bootstrap-servers: ${K2R_KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: org.kafka.practice.kafkademo.domain.entities.value
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
  rabbitmq:
    host: ${K2R_RABBIT_HOST}
    port: ${K2R_RABBIT_PORT}
    username: ${K2R_RABBIT_USERNAME}
    password: ${K2R_RABBIT_PASSWORD}

web:
  pages:
    update-interval-ms: 3000
    page-max-elements-size: 300
    endpoints:
      persons-list-path: /persons/list
      companies-list-path: /companies/list
  rest-api:
    endpoints:
      persons-list-api: api/persons/list
      companies-list-api: api/companies/list

server:
  port: 8080
  servlet:
    encoding:
      force-response: true
      charset: UTF-8
  error:
    whitelabel:
      enabled: false

messaging:
  rabbit:
    person-dto-exchange-name: person-dto-exchange
    person-dto-redirect-queue-name: person-dto-redirect-queue
    person-dto-response-queue-name: person-dto-response-queue
    person-dto-redirect-routing-key: person-dto-redirect-key
    person-dto-response-routing-key: person-dto-response-key
  kafka:
    person-dto-group-id: syntegrico-kafka-group
    person-dto-receive-topic-name: syntegrico-kafka-message-topic
    person-dto-response-topic-name: syntegrico-kafka-message-topic-response

logging:
  level:
    # Exception handlers log level
    org.kafka.practice.kafkademo.domain.config.ControllerExceptionHandler: TRACE
    org.kafka.practice.kafkademo.domain.config.RabbitExceptionHandler: DEBUG
    org.kafka.practice.kafkademo.domain.config.KafkaExceptionHandler: DEBUG
    # Services log level
    org.kafka.practice.kafkademo.domain.business.service.PersonDtoRedirectBusinessServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.business.service.CompanyBusinessServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.business.service.PersonBusinessServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.business.service.HobbyBusinessServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.service.CompanyServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.service.PersonServiceImpl: DEBUG
    org.kafka.practice.kafkademo.domain.service.HobbyServiceImpl: DEBUG
    # Listeners log level
    org.kafka.practice.kafkademo.domain.listeners.RabbitDataListener: DEBUG
    org.kafka.practice.kafkademo.domain.listeners.KafkaDataListener: DEBUG
    # Transaction logging
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
    org.springframework.transaction: DEBUG
    org.hibernate.transaction: DEBUG
    # Dev profiles logging
    org.kafka.practice.kafkademo.domain.dev.NikitaKafkaListener: DEBUG
    org.kafka.practice.kafkademo.domain.dev.VladRabbitListener: DEBUG
    org.kafka.practice.kafkademo.domain.dev.NikitaScheduler: DEBUG

random-exception-generator:
  person-dto-receive-exception-probability-percent: 20

dev:
  vlad-exception-generator-probability-percent: 10
  nikita-kafka-producer-delay-ms: 3000