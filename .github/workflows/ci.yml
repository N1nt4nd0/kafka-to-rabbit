name: Build and Deploy Spring App with Docker

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Build Docker image
        run: docker build -t n1nt4nd0/spring-app:latest .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: docker push n1nt4nd0/spring-app:latest

      - name: Run Docker Compose
        run: |
          docker-compose -f docker-compose.yml -p k2r-docker up -d --build
        env:
          K2R_ACTIVE_PROFILE: "prod"
          K2R_KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.K2R_KAFKA_BOOTSTRAP_SERVERS }}
          K2R_RABBIT_HOST: ${{ secrets.K2R_RABBIT_HOST }}
          K2R_RABBIT_PORT: ${{ secrets.K2R_RABBIT_PORT }}
          K2R_RABBIT_USERNAME: ${{ secrets.K2R_RABBIT_USERNAME }}
          K2R_RABBIT_PASSWORD: ${{ secrets.K2R_RABBIT_PASSWORD }}
          K2R_DB_URL: ${{ secrets.K2R_DB_URL }}
          K2R_DB_NAME: ${{ secrets.K2R_DB_NAME }}
          K2R_REDIS_HOST: ${{ secrets.K2R_REDIS_HOST }}
          K2R_REDIS_PORT: ${{ secrets.K2R_REDIS_PORT }}

      - name: Run Spring Application in Docker
        run: docker run -d -p 8080:8080 n1nt4nd0/spring-app:latest
